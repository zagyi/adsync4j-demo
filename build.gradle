apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile(
            'org.adsync4j:adsync4j-unboundid:0.1.1-SNAPSHOT',
            'org.assertj:assertj-core:1.3.0',
            'org.hibernate:hibernate-entitymanager:4.2.3.Final',
            'org.slf4j:slf4j-api:1.7.5',
            'org.springframework.data:spring-data-jpa:1.3.2.RELEASE'
    )

    runtime(
            'cglib:cglib:2.2.2',
            'ch.qos.logback:logback-classic:1.0.13',
            'com.h2database:h2:1.3.172',
            'org.slf4j:jcl-over-slf4j:1.7.5',
    )
}

configurations {
    all*.exclude group: 'commons-logging'
}

// add an action to the build task that creates the adsync4j-demo.sh startup shell script
build << {
    File script = file('adsync4j-demo.sh')

    script.withPrintWriter {
        it.println '#!/bin/sh'
        it.println "java -cp ${getRuntimeClasspath()} org.adsync4j.demo.ADSync \"\$@\""
    }

    // make it executable
    ant.chmod(file: script.absolutePath, perm: 'u+x')
}

String getRuntimeClasspath() {
    sourceSets.main.runtimeClasspath.collect { it.absolutePath }.join(':')
}

clean << {
    file('adsync.sh').delete()
}

task wrapper(type: org.gradle.api.tasks.wrapper.Wrapper) {
    gradleVersion = '1.7'
}
